{"ast":null,"code":"import { bcs } from \"../bcs/index.js\";\nfunction messageWithIntent(scope, message) {\n  return bcs.IntentMessage(bcs.fixedArray(message.length, bcs.u8())).serialize({\n    intent: {\n      scope: {\n        [scope]: true\n      },\n      version: {\n        V0: true\n      },\n      appId: {\n        Sui: true\n      }\n    },\n    value: message\n  }).toBytes();\n}\nexport { messageWithIntent };","map":{"version":3,"names":["bcs","messageWithIntent","scope","message","IntentMessage","fixedArray","length","u8","serialize","intent","version","V0","appId","Sui","value","toBytes"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\sui\\src\\cryptography\\intent.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '../bcs/index.js';\n\nexport type IntentScope = Exclude<keyof typeof bcs.IntentScope.$inferType, '$kind'>;\n/**\n * Inserts a domain separator for a message that is being signed\n */\nexport function messageWithIntent(scope: IntentScope, message: Uint8Array) {\n\treturn bcs\n\t\t.IntentMessage(bcs.fixedArray(message.length, bcs.u8()))\n\t\t.serialize({\n\t\t\tintent: {\n\t\t\t\tscope: { [scope as 'PersonalMessage']: true },\n\t\t\t\tversion: { V0: true },\n\t\t\t\tappId: { Sui: true },\n\t\t\t},\n\t\t\tvalue: message,\n\t\t})\n\t\t.toBytes();\n}\n"],"mappings":"AAGA,SAASA,GAAA,QAAW;AAMb,SAASC,kBAAkBC,KAAA,EAAoBC,OAAA,EAAqB;EAC1E,OAAOH,GAAA,CACLI,aAAA,CAAcJ,GAAA,CAAIK,UAAA,CAAWF,OAAA,CAAQG,MAAA,EAAQN,GAAA,CAAIO,EAAA,CAAG,CAAC,CAAC,EACtDC,SAAA,CAAU;IACVC,MAAA,EAAQ;MACPP,KAAA,EAAO;QAAE,CAACA,KAA0B,GAAG;MAAK;MAC5CQ,OAAA,EAAS;QAAEC,EAAA,EAAI;MAAK;MACpBC,KAAA,EAAO;QAAEC,GAAA,EAAK;MAAK;IACpB;IACAC,KAAA,EAAOX;EACR,CAAC,EACAY,OAAA,CAAQ;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}