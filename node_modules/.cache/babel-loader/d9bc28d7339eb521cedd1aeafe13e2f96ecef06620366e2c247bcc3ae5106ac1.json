{"ast":null,"code":"function fromHex(hexStr) {\n  const normalized = hexStr.startsWith(\"0x\") ? hexStr.slice(2) : hexStr;\n  const padded = normalized.length % 2 === 0 ? normalized : `0${normalized}`;\n  const intArr = padded.match(/[0-9a-fA-F]{2}/g)?.map(byte => parseInt(byte, 16)) ?? [];\n  if (intArr.length !== padded.length / 2) {\n    throw new Error(`Invalid hex string ${hexStr}`);\n  }\n  return Uint8Array.from(intArr);\n}\nfunction toHex(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nconst toHEX = toHex;\nconst fromHEX = fromHex;\nexport { fromHEX, fromHex, toHEX, toHex };","map":{"version":3,"names":["fromHex","hexStr","normalized","startsWith","slice","padded","length","intArr","match","map","byte","parseInt","Error","Uint8Array","from","toHex","bytes","reduce","str","toString","padStart","toHEX","fromHEX"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\bcs\\src\\hex.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function fromHex(hexStr: string): Uint8Array {\n\tconst normalized = hexStr.startsWith('0x') ? hexStr.slice(2) : hexStr;\n\tconst padded = normalized.length % 2 === 0 ? normalized : `0${normalized}`;\n\tconst intArr = padded.match(/[0-9a-fA-F]{2}/g)?.map((byte) => parseInt(byte, 16)) ?? [];\n\n\tif (intArr.length !== padded.length / 2) {\n\t\tthrow new Error(`Invalid hex string ${hexStr}`);\n\t}\n\n\treturn Uint8Array.from(intArr);\n}\n\nexport function toHex(bytes: Uint8Array): string {\n\treturn bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n\n/** @deprecated use toHex instead */\nexport const toHEX = toHex;\n\n/** @deprecated use fromHex instead */\nexport const fromHEX = fromHex;\n"],"mappings":"AAGO,SAASA,QAAQC,MAAA,EAA4B;EACnD,MAAMC,UAAA,GAAaD,MAAA,CAAOE,UAAA,CAAW,IAAI,IAAIF,MAAA,CAAOG,KAAA,CAAM,CAAC,IAAIH,MAAA;EAC/D,MAAMI,MAAA,GAASH,UAAA,CAAWI,MAAA,GAAS,MAAM,IAAIJ,UAAA,GAAa,IAAIA,UAAU;EACxE,MAAMK,MAAA,GAASF,MAAA,CAAOG,KAAA,CAAM,iBAAiB,GAAGC,GAAA,CAAKC,IAAA,IAASC,QAAA,CAASD,IAAA,EAAM,EAAE,CAAC,KAAK,EAAC;EAEtF,IAAIH,MAAA,CAAOD,MAAA,KAAWD,MAAA,CAAOC,MAAA,GAAS,GAAG;IACxC,MAAM,IAAIM,KAAA,CAAM,sBAAsBX,MAAM,EAAE;EAC/C;EAEA,OAAOY,UAAA,CAAWC,IAAA,CAAKP,MAAM;AAC9B;AAEO,SAASQ,MAAMC,KAAA,EAA2B;EAChD,OAAOA,KAAA,CAAMC,MAAA,CAAO,CAACC,GAAA,EAAKR,IAAA,KAASQ,GAAA,GAAMR,IAAA,CAAKS,QAAA,CAAS,EAAE,EAAEC,QAAA,CAAS,GAAG,GAAG,GAAG,EAAE;AAChF;AAGO,MAAMC,KAAA,GAAQN,KAAA;AAGd,MAAMO,OAAA,GAAUtB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}