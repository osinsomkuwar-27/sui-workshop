{"ast":null,"code":"var __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar _queue, _queue2;\nclass SerialQueue {\n  constructor() {\n    __privateAdd(this, _queue, []);\n  }\n  async runTask(task) {\n    return new Promise((resolve, reject) => {\n      __privateGet(this, _queue).push(() => {\n        task().finally(() => {\n          __privateGet(this, _queue).shift();\n          if (__privateGet(this, _queue).length > 0) {\n            __privateGet(this, _queue)[0]();\n          }\n        }).then(resolve, reject);\n      });\n      if (__privateGet(this, _queue).length === 1) {\n        __privateGet(this, _queue)[0]();\n      }\n    });\n  }\n}\n_queue = new WeakMap();\nclass ParallelQueue {\n  constructor(maxTasks) {\n    __privateAdd(this, _queue2, []);\n    this.activeTasks = 0;\n    this.maxTasks = maxTasks;\n  }\n  runTask(task) {\n    return new Promise((resolve, reject) => {\n      if (this.activeTasks < this.maxTasks) {\n        this.activeTasks++;\n        task().finally(() => {\n          if (__privateGet(this, _queue2).length > 0) {\n            __privateGet(this, _queue2).shift()();\n          } else {\n            this.activeTasks--;\n          }\n        }).then(resolve, reject);\n      } else {\n        __privateGet(this, _queue2).push(() => {\n          task().finally(() => {\n            if (__privateGet(this, _queue2).length > 0) {\n              __privateGet(this, _queue2).shift()();\n            } else {\n              this.activeTasks--;\n            }\n          }).then(resolve, reject);\n        });\n      }\n    });\n  }\n}\n_queue2 = new WeakMap();\nexport { ParallelQueue, SerialQueue };","map":{"version":3,"names":["_queue","_queue2","SerialQueue","constructor","__privateAdd","runTask","task","Promise","resolve","reject","__privateGet","push","finally","shift","length","then","WeakMap","ParallelQueue","maxTasks","activeTasks"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\sui\\src\\transactions\\executor\\queue.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport class SerialQueue {\n\t#queue: Array<() => void> = [];\n\n\tasync runTask<T>(task: () => Promise<T>): Promise<T> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#queue.push(() => {\n\t\t\t\ttask()\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tthis.#queue.shift();\n\t\t\t\t\t\tif (this.#queue.length > 0) {\n\t\t\t\t\t\t\tthis.#queue[0]();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(resolve, reject);\n\t\t\t});\n\n\t\t\tif (this.#queue.length === 1) {\n\t\t\t\tthis.#queue[0]();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class ParallelQueue {\n\t#queue: Array<() => void> = [];\n\tactiveTasks = 0;\n\tmaxTasks: number;\n\n\tconstructor(maxTasks: number) {\n\t\tthis.maxTasks = maxTasks;\n\t}\n\n\trunTask<T>(task: () => Promise<T>): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tif (this.activeTasks < this.maxTasks) {\n\t\t\t\tthis.activeTasks++;\n\n\t\t\t\ttask()\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tif (this.#queue.length > 0) {\n\t\t\t\t\t\t\tthis.#queue.shift()!();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.activeTasks--;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(resolve, reject);\n\t\t\t} else {\n\t\t\t\tthis.#queue.push(() => {\n\t\t\t\t\ttask()\n\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\tif (this.#queue.length > 0) {\n\t\t\t\t\t\t\t\tthis.#queue.shift()!();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.activeTasks--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(resolve, reject);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,EAAAC,OAAA;AAGO,MAAMC,WAAA,CAAY;EAAlBC,YAAA;IACNC,YAAA,OAAAJ,MAAA,EAA4B,EAAC;EAAA;EAE7B,MAAMK,QAAWC,IAAA,EAAoC;IACpD,OAAO,IAAIC,OAAA,CAAQ,CAACC,OAAA,EAASC,MAAA,KAAW;MACvCC,YAAA,OAAKV,MAAA,EAAOW,IAAA,CAAK,MAAM;QACtBL,IAAA,CAAK,EACHM,OAAA,CAAQ,MAAM;UACdF,YAAA,OAAKV,MAAA,EAAOa,KAAA,CAAM;UAClB,IAAIH,YAAA,OAAKV,MAAA,EAAOc,MAAA,GAAS,GAAG;YAC3BJ,YAAA,OAAKV,MAAA,EAAO,CAAC,EAAE;UAChB;QACD,CAAC,EACAe,IAAA,CAAKP,OAAA,EAASC,MAAM;MACvB,CAAC;MAED,IAAIC,YAAA,OAAKV,MAAA,EAAOc,MAAA,KAAW,GAAG;QAC7BJ,YAAA,OAAKV,MAAA,EAAO,CAAC,EAAE;MAChB;IACD,CAAC;EACF;AACD;AApBCA,MAAA,OAAAgB,OAAA;AAsBM,MAAMC,aAAA,CAAc;EAK1Bd,YAAYe,QAAA,EAAkB;IAJ9Bd,YAAA,OAAAH,OAAA,EAA4B,EAAC;IAC7B,KAAAkB,WAAA,GAAc;IAIb,KAAKD,QAAA,GAAWA,QAAA;EACjB;EAEAb,QAAWC,IAAA,EAAoC;IAC9C,OAAO,IAAIC,OAAA,CAAW,CAACC,OAAA,EAASC,MAAA,KAAW;MAC1C,IAAI,KAAKU,WAAA,GAAc,KAAKD,QAAA,EAAU;QACrC,KAAKC,WAAA;QAELb,IAAA,CAAK,EACHM,OAAA,CAAQ,MAAM;UACd,IAAIF,YAAA,OAAKT,OAAA,EAAOa,MAAA,GAAS,GAAG;YAC3BJ,YAAA,OAAKT,OAAA,EAAOY,KAAA,CAAM,EAAG;UACtB,OAAO;YACN,KAAKM,WAAA;UACN;QACD,CAAC,EACAJ,IAAA,CAAKP,OAAA,EAASC,MAAM;MACvB,OAAO;QACNC,YAAA,OAAKT,OAAA,EAAOU,IAAA,CAAK,MAAM;UACtBL,IAAA,CAAK,EACHM,OAAA,CAAQ,MAAM;YACd,IAAIF,YAAA,OAAKT,OAAA,EAAOa,MAAA,GAAS,GAAG;cAC3BJ,YAAA,OAAKT,OAAA,EAAOY,KAAA,CAAM,EAAG;YACtB,OAAO;cACN,KAAKM,WAAA;YACN;UACD,CAAC,EACAJ,IAAA,CAAKP,OAAA,EAASC,MAAM;QACvB,CAAC;MACF;IACD,CAAC;EACF;AACD;AArCCR,OAAA,OAAAe,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}