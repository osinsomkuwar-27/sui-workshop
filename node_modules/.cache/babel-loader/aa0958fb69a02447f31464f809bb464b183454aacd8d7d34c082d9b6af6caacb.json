{"ast":null,"code":"var __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\nvar _popup, _id, _origin, _name, _network, _promise, _resolve, _reject, _interval, _listener, _StashedPopup_instances, cleanup_fn, _request;\nimport { parse, safeParse } from \"valibot\";\nimport { withResolvers } from \"../../utils/withResolvers.js\";\nimport { StashedRequest, StashedResponse } from \"./events.js\";\nconst DEFAULT_STASHED_ORIGIN = \"https://getstashed.com\";\nclass StashedPopup {\n  constructor({\n    name,\n    network,\n    origin = DEFAULT_STASHED_ORIGIN\n  }) {\n    __privateAdd(this, _StashedPopup_instances);\n    __privateAdd(this, _popup);\n    __privateAdd(this, _id);\n    __privateAdd(this, _origin);\n    __privateAdd(this, _name);\n    __privateAdd(this, _network);\n    __privateAdd(this, _promise);\n    __privateAdd(this, _resolve);\n    __privateAdd(this, _reject);\n    __privateAdd(this, _interval, null);\n    __privateAdd(this, _listener, event => {\n      if (event.origin !== __privateGet(this, _origin)) {\n        return;\n      }\n      const {\n        success,\n        output\n      } = safeParse(StashedResponse, event.data);\n      if (!success || output.id !== __privateGet(this, _id)) return;\n      __privateMethod(this, _StashedPopup_instances, cleanup_fn).call(this);\n      if (output.payload.type === \"reject\") {\n        __privateGet(this, _reject).call(this, new Error(\"User rejected the request\"));\n      } else if (output.payload.type === \"resolve\") {\n        __privateGet(this, _resolve).call(this, output.payload.data);\n      }\n    });\n    const popup = window.open(\"about:blank\", \"_blank\");\n    if (!popup) {\n      throw new Error(\"Failed to open new window\");\n    }\n    __privateSet(this, _popup, popup);\n    __privateSet(this, _id, crypto.randomUUID());\n    __privateSet(this, _origin, origin);\n    __privateSet(this, _name, name);\n    __privateSet(this, _network, network);\n    const {\n      promise,\n      resolve,\n      reject\n    } = withResolvers();\n    __privateSet(this, _promise, promise);\n    __privateSet(this, _resolve, resolve);\n    __privateSet(this, _reject, reject);\n    __privateSet(this, _interval, setInterval(() => {\n      try {\n        if (__privateGet(this, _popup).closed) {\n          __privateMethod(this, _StashedPopup_instances, cleanup_fn).call(this);\n          reject(new Error(\"User closed the Stashed window\"));\n        }\n      } catch {}\n    }, 1e3));\n  }\n  send({\n    type,\n    ...data\n  }) {\n    window.addEventListener(\"message\", __privateGet(this, _listener));\n    __privateGet(this, _popup).location.assign(`${__privateGet(this, _origin)}/dapp/${type}?${new URLSearchParams({\n      id: __privateGet(this, _id),\n      origin: window.origin,\n      network: __privateGet(this, _network),\n      name: __privateGet(this, _name)\n    })}${data ? `#${new URLSearchParams(data)}` : \"\"}`);\n    return __privateGet(this, _promise);\n  }\n  close() {\n    __privateMethod(this, _StashedPopup_instances, cleanup_fn).call(this);\n    __privateGet(this, _popup).close();\n  }\n}\n_popup = new WeakMap();\n_id = new WeakMap();\n_origin = new WeakMap();\n_name = new WeakMap();\n_network = new WeakMap();\n_promise = new WeakMap();\n_resolve = new WeakMap();\n_reject = new WeakMap();\n_interval = new WeakMap();\n_listener = new WeakMap();\n_StashedPopup_instances = new WeakSet();\ncleanup_fn = function () {\n  if (__privateGet(this, _interval)) {\n    clearInterval(__privateGet(this, _interval));\n    __privateSet(this, _interval, null);\n  }\n  window.removeEventListener(\"message\", __privateGet(this, _listener));\n};\nconst _StashedHost = class _StashedHost {\n  constructor(request) {\n    __privateAdd(this, _request);\n    if (typeof window === \"undefined\" || !window.opener) {\n      throw new Error(\"StashedHost can only be used in a window opened through `window.open`. `window.opener` is not available.\");\n    }\n    __privateSet(this, _request, request);\n  }\n  static fromUrl(url = window.location.href) {\n    const parsed = new URL(url);\n    const urlHashData = parsed.hash ? Object.fromEntries([...new URLSearchParams(parsed.hash.slice(1))]) : {};\n    const request = parse(StashedRequest, {\n      id: parsed.searchParams.get(\"id\"),\n      origin: parsed.searchParams.get(\"origin\"),\n      name: parsed.searchParams.get(\"name\"),\n      payload: {\n        type: parsed.pathname.split(\"/\").pop(),\n        ...urlHashData\n      }\n    });\n    return new _StashedHost(request);\n  }\n  getRequestData() {\n    return __privateGet(this, _request);\n  }\n  sendMessage(payload) {\n    window.opener.postMessage({\n      id: __privateGet(this, _request).id,\n      source: \"zksend-channel\",\n      payload\n    }, __privateGet(this, _request).origin);\n  }\n  close(payload) {\n    if (payload) {\n      this.sendMessage(payload);\n    }\n    window.close();\n  }\n};\n_request = new WeakMap();\nlet StashedHost = _StashedHost;\nexport { DEFAULT_STASHED_ORIGIN, StashedHost, StashedPopup, StashedRequest, StashedResponse };","map":{"version":3,"names":["_popup","_id","_origin","_name","_network","_promise","_resolve","_reject","_interval","_listener","_StashedPopup_instances","cleanup_fn","_request","parse","safeParse","withResolvers","StashedRequest","StashedResponse","DEFAULT_STASHED_ORIGIN","StashedPopup","constructor","name","network","origin","__privateAdd","event","__privateGet","success","output","data","id","__privateMethod","call","payload","type","Error","popup","window","open","__privateSet","crypto","randomUUID","promise","resolve","reject","setInterval","closed","send","addEventListener","location","assign","URLSearchParams","close","WeakMap","WeakSet","clearInterval","removeEventListener","_StashedHost","request","opener","fromUrl","url","href","parsed","URL","urlHashData","hash","Object","fromEntries","slice","searchParams","get","pathname","split","pop","getRequestData","sendMessage","postMessage","source","StashedHost"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\zksend\\src\\wallet\\channel\\index.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { InferOutput } from 'valibot';\nimport { parse, safeParse } from 'valibot';\n\nimport { withResolvers } from '../../utils/withResolvers.js';\nimport type { StashedSupportedNetwork } from '../types.js';\nimport type { StashedRequestData, StashedResponsePayload, StashedResponseTypes } from './events.js';\nimport { StashedRequest, StashedResponse } from './events.js';\n\nexport const DEFAULT_STASHED_ORIGIN = 'https://getstashed.com';\n\nexport { StashedRequest, StashedResponse };\n\nexport class StashedPopup {\n\t#popup: Window;\n\n\t#id: string;\n\t#origin: string;\n\t#name: string;\n\t#network: StashedSupportedNetwork;\n\n\t#promise: Promise<unknown>;\n\t#resolve: (data: unknown) => void;\n\t#reject: (error: Error) => void;\n\n\t#interval: ReturnType<typeof setInterval> | null = null;\n\n\tconstructor({\n\t\tname,\n\t\tnetwork,\n\t\torigin = DEFAULT_STASHED_ORIGIN,\n\t}: {\n\t\tname: string;\n\t\tnetwork: StashedSupportedNetwork;\n\t\torigin?: string;\n\t}) {\n\t\tconst popup = window.open('about:blank', '_blank');\n\n\t\tif (!popup) {\n\t\t\tthrow new Error('Failed to open new window');\n\t\t}\n\t\tthis.#popup = popup;\n\n\t\tthis.#id = crypto.randomUUID();\n\t\tthis.#origin = origin;\n\t\tthis.#name = name;\n\t\tthis.#network = network;\n\n\t\tconst { promise, resolve, reject } = withResolvers();\n\t\tthis.#promise = promise;\n\t\tthis.#resolve = resolve;\n\t\tthis.#reject = reject;\n\n\t\tthis.#interval = setInterval(() => {\n\t\t\ttry {\n\t\t\t\tif (this.#popup.closed) {\n\t\t\t\t\tthis.#cleanup();\n\t\t\t\t\treject(new Error('User closed the Stashed window'));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// This can error during the login flow, but that's fine.\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tsend<T extends StashedRequestData['type']>({\n\t\ttype,\n\t\t...data\n\t}: {\n\t\ttype: T;\n\t} & Extract<StashedRequestData, { type: T }>): Promise<StashedResponseTypes[T]> {\n\t\twindow.addEventListener('message', this.#listener);\n\t\tthis.#popup.location.assign(\n\t\t\t`${this.#origin}/dapp/${type}?${new URLSearchParams({\n\t\t\t\tid: this.#id,\n\t\t\t\torigin: window.origin,\n\t\t\t\tnetwork: this.#network,\n\t\t\t\tname: this.#name,\n\t\t\t})}${data ? `#${new URLSearchParams(data as never)}` : ''}`,\n\t\t);\n\n\t\treturn this.#promise as Promise<StashedResponseTypes[T]>;\n\t}\n\n\tclose() {\n\t\tthis.#cleanup();\n\t\tthis.#popup.close();\n\t}\n\n\t#listener = (event: MessageEvent) => {\n\t\tif (event.origin !== this.#origin) {\n\t\t\treturn;\n\t\t}\n\t\tconst { success, output } = safeParse(StashedResponse, event.data);\n\t\tif (!success || output.id !== this.#id) return;\n\n\t\tthis.#cleanup();\n\n\t\tif (output.payload.type === 'reject') {\n\t\t\tthis.#reject(new Error('User rejected the request'));\n\t\t} else if (output.payload.type === 'resolve') {\n\t\t\tthis.#resolve(output.payload.data);\n\t\t}\n\t};\n\n\t#cleanup() {\n\t\tif (this.#interval) {\n\t\t\tclearInterval(this.#interval);\n\t\t\tthis.#interval = null;\n\t\t}\n\t\twindow.removeEventListener('message', this.#listener);\n\t}\n}\n\nexport class StashedHost {\n\t#request: InferOutput<typeof StashedRequest>;\n\n\tconstructor(request: InferOutput<typeof StashedRequest>) {\n\t\tif (typeof window === 'undefined' || !window.opener) {\n\t\t\tthrow new Error(\n\t\t\t\t'StashedHost can only be used in a window opened through `window.open`. `window.opener` is not available.',\n\t\t\t);\n\t\t}\n\n\t\tthis.#request = request;\n\t}\n\n\tstatic fromUrl(url: string = window.location.href) {\n\t\tconst parsed = new URL(url);\n\n\t\tconst urlHashData = parsed.hash\n\t\t\t? Object.fromEntries([...new URLSearchParams(parsed.hash.slice(1))])\n\t\t\t: {};\n\n\t\tconst request = parse(StashedRequest, {\n\t\t\tid: parsed.searchParams.get('id'),\n\t\t\torigin: parsed.searchParams.get('origin'),\n\t\t\tname: parsed.searchParams.get('name'),\n\t\t\tpayload: {\n\t\t\t\ttype: parsed.pathname.split('/').pop(),\n\t\t\t\t...urlHashData,\n\t\t\t},\n\t\t});\n\n\t\treturn new StashedHost(request);\n\t}\n\n\tgetRequestData() {\n\t\treturn this.#request;\n\t}\n\n\tsendMessage(payload: StashedResponsePayload) {\n\t\twindow.opener.postMessage(\n\t\t\t{\n\t\t\t\tid: this.#request.id,\n\t\t\t\tsource: 'zksend-channel',\n\t\t\t\tpayload,\n\t\t\t} satisfies StashedResponse,\n\t\t\tthis.#request.origin,\n\t\t);\n\t}\n\n\tclose(payload?: StashedResponsePayload) {\n\t\tif (payload) {\n\t\t\tthis.sendMessage(payload);\n\t\t}\n\t\twindow.close();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}