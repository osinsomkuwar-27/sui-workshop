{"ast":null,"code":"var __typeError = msg => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _queue, _signer, _cache, _defaultGasBudget, _cacheGasCoin, _buildTransaction;\nimport { toBase64 } from \"@mysten/bcs\";\nimport { isTransaction, Transaction } from \"../Transaction.js\";\nimport { CachingTransactionExecutor } from \"./caching.js\";\nimport { SerialQueue } from \"./queue.js\";\nclass SerialTransactionExecutor {\n  constructor({\n    signer,\n    defaultGasBudget = 50000000n,\n    ...options\n  }) {\n    __privateAdd(this, _queue, new SerialQueue());\n    __privateAdd(this, _signer);\n    __privateAdd(this, _cache);\n    __privateAdd(this, _defaultGasBudget);\n    __privateAdd(this, _cacheGasCoin, async effects => {\n      if (!effects.V2) {\n        return;\n      }\n      const gasCoin = getGasCoinFromEffects(effects).ref;\n      if (gasCoin) {\n        __privateGet(this, _cache).cache.setCustom(\"gasCoin\", gasCoin);\n      } else {\n        __privateGet(this, _cache).cache.deleteCustom(\"gasCoin\");\n      }\n    });\n    __privateAdd(this, _buildTransaction, async transaction => {\n      const gasCoin = await __privateGet(this, _cache).cache.getCustom(\"gasCoin\");\n      const copy = Transaction.from(transaction);\n      if (gasCoin) {\n        copy.setGasPayment([gasCoin]);\n      }\n      copy.setGasBudgetIfNotSet(__privateGet(this, _defaultGasBudget));\n      copy.setSenderIfNotSet(__privateGet(this, _signer).toSuiAddress());\n      return __privateGet(this, _cache).buildTransaction({\n        transaction: copy\n      });\n    });\n    __privateSet(this, _signer, signer);\n    __privateSet(this, _defaultGasBudget, defaultGasBudget);\n    __privateSet(this, _cache, new CachingTransactionExecutor({\n      client: options.client,\n      cache: options.cache,\n      onEffects: effects => __privateGet(this, _cacheGasCoin).call(this, effects)\n    }));\n  }\n  async applyEffects(effects) {\n    return __privateGet(this, _cache).applyEffects(effects);\n  }\n  async buildTransaction(transaction) {\n    return __privateGet(this, _queue).runTask(() => __privateGet(this, _buildTransaction).call(this, transaction));\n  }\n  resetCache() {\n    return __privateGet(this, _cache).reset();\n  }\n  waitForLastTransaction() {\n    return __privateGet(this, _cache).waitForLastTransaction();\n  }\n  executeTransaction(transaction, options) {\n    return __privateGet(this, _queue).runTask(async () => {\n      const bytes = isTransaction(transaction) ? await __privateGet(this, _buildTransaction).call(this, transaction) : transaction;\n      const {\n        signature\n      } = await __privateGet(this, _signer).signTransaction(bytes);\n      const results = await __privateGet(this, _cache).executeTransaction({\n        signature,\n        transaction: bytes,\n        options\n      }).catch(async error => {\n        await this.resetCache();\n        throw error;\n      });\n      const effectsBytes = Uint8Array.from(results.rawEffects);\n      return {\n        digest: results.digest,\n        effects: toBase64(effectsBytes),\n        data: results\n      };\n    });\n  }\n}\n_queue = new WeakMap();\n_signer = new WeakMap();\n_cache = new WeakMap();\n_defaultGasBudget = new WeakMap();\n_cacheGasCoin = new WeakMap();\n_buildTransaction = new WeakMap();\nfunction getGasCoinFromEffects(effects) {\n  if (!effects.V2) {\n    throw new Error(\"Unexpected effects version\");\n  }\n  const gasObjectChange = effects.V2.changedObjects[effects.V2.gasObjectIndex];\n  if (!gasObjectChange) {\n    throw new Error(\"Gas object not found in effects\");\n  }\n  const [objectId, {\n    outputState\n  }] = gasObjectChange;\n  if (!outputState.ObjectWrite) {\n    throw new Error(\"Unexpected gas object state\");\n  }\n  const [digest, owner] = outputState.ObjectWrite;\n  return {\n    ref: {\n      objectId,\n      digest,\n      version: effects.V2.lamportVersion\n    },\n    owner: owner.AddressOwner || owner.ObjectOwner\n  };\n}\nexport { SerialTransactionExecutor, getGasCoinFromEffects };","map":{"version":3,"names":["_queue","_signer","_cache","_defaultGasBudget","_cacheGasCoin","_buildTransaction","toBase64","isTransaction","Transaction","CachingTransactionExecutor","SerialQueue","SerialTransactionExecutor","constructor","signer","defaultGasBudget","options","__privateAdd","effects","V2","gasCoin","getGasCoinFromEffects","ref","__privateGet","cache","setCustom","deleteCustom","transaction","getCustom","copy","from","setGasPayment","setGasBudgetIfNotSet","setSenderIfNotSet","toSuiAddress","buildTransaction","__privateSet","client","onEffects","call","applyEffects","runTask","resetCache","reset","waitForLastTransaction","executeTransaction","bytes","signature","signTransaction","results","catch","error","effectsBytes","Uint8Array","rawEffects","digest","data","WeakMap","Error","gasObjectChange","changedObjects","gasObjectIndex","objectId","outputState","ObjectWrite","owner","version","lamportVersion","AddressOwner","ObjectOwner"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\sui\\src\\transactions\\executor\\serial.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { toBase64 } from '@mysten/bcs';\n\nimport type { bcs } from '../../bcs/index.js';\nimport type { SuiClient, SuiTransactionBlockResponseOptions } from '../../client/index.js';\nimport type { Signer } from '../../cryptography/keypair.js';\nimport type { ObjectCacheOptions } from '../ObjectCache.js';\nimport { isTransaction, Transaction } from '../Transaction.js';\nimport { CachingTransactionExecutor } from './caching.js';\nimport { SerialQueue } from './queue.js';\n\nexport class SerialTransactionExecutor {\n\t#queue = new SerialQueue();\n\t#signer: Signer;\n\t#cache: CachingTransactionExecutor;\n\t#defaultGasBudget: bigint;\n\n\tconstructor({\n\t\tsigner,\n\t\tdefaultGasBudget = 50_000_000n,\n\t\t...options\n\t}: Omit<ObjectCacheOptions, 'address'> & {\n\t\tclient: SuiClient;\n\t\tsigner: Signer;\n\t\t/** The gasBudget to use if the transaction has not defined it's own gasBudget, defaults to `50_000_000n` */\n\t\tdefaultGasBudget?: bigint;\n\t}) {\n\t\tthis.#signer = signer;\n\t\tthis.#defaultGasBudget = defaultGasBudget;\n\t\tthis.#cache = new CachingTransactionExecutor({\n\t\t\tclient: options.client,\n\t\t\tcache: options.cache,\n\t\t\tonEffects: (effects) => this.#cacheGasCoin(effects),\n\t\t});\n\t}\n\n\tasync applyEffects(effects: typeof bcs.TransactionEffects.$inferType) {\n\t\treturn this.#cache.applyEffects(effects);\n\t}\n\n\t#cacheGasCoin = async (effects: typeof bcs.TransactionEffects.$inferType) => {\n\t\tif (!effects.V2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst gasCoin = getGasCoinFromEffects(effects).ref;\n\t\tif (gasCoin) {\n\t\t\tthis.#cache.cache.setCustom('gasCoin', gasCoin);\n\t\t} else {\n\t\t\tthis.#cache.cache.deleteCustom('gasCoin');\n\t\t}\n\t};\n\n\tasync buildTransaction(transaction: Transaction) {\n\t\treturn this.#queue.runTask(() => this.#buildTransaction(transaction));\n\t}\n\n\t#buildTransaction = async (transaction: Transaction) => {\n\t\tconst gasCoin = await this.#cache.cache.getCustom<{\n\t\t\tobjectId: string;\n\t\t\tversion: string;\n\t\t\tdigest: string;\n\t\t}>('gasCoin');\n\n\t\tconst copy = Transaction.from(transaction);\n\t\tif (gasCoin) {\n\t\t\tcopy.setGasPayment([gasCoin]);\n\t\t}\n\n\t\tcopy.setGasBudgetIfNotSet(this.#defaultGasBudget);\n\t\tcopy.setSenderIfNotSet(this.#signer.toSuiAddress());\n\n\t\treturn this.#cache.buildTransaction({ transaction: copy });\n\t};\n\n\tresetCache() {\n\t\treturn this.#cache.reset();\n\t}\n\n\twaitForLastTransaction() {\n\t\treturn this.#cache.waitForLastTransaction();\n\t}\n\n\texecuteTransaction(\n\t\ttransaction: Transaction | Uint8Array,\n\t\toptions?: SuiTransactionBlockResponseOptions,\n\t) {\n\t\treturn this.#queue.runTask(async () => {\n\t\t\tconst bytes = isTransaction(transaction)\n\t\t\t\t? await this.#buildTransaction(transaction)\n\t\t\t\t: transaction;\n\n\t\t\tconst { signature } = await this.#signer.signTransaction(bytes);\n\t\t\tconst results = await this.#cache\n\t\t\t\t.executeTransaction({\n\t\t\t\t\tsignature,\n\t\t\t\t\ttransaction: bytes,\n\t\t\t\t\toptions,\n\t\t\t\t})\n\t\t\t\t.catch(async (error) => {\n\t\t\t\t\tawait this.resetCache();\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\n\t\t\tconst effectsBytes = Uint8Array.from(results.rawEffects!);\n\t\t\treturn {\n\t\t\t\tdigest: results.digest,\n\t\t\t\teffects: toBase64(effectsBytes),\n\t\t\t\tdata: results,\n\t\t\t};\n\t\t});\n\t}\n}\n\nexport function getGasCoinFromEffects(effects: typeof bcs.TransactionEffects.$inferType) {\n\tif (!effects.V2) {\n\t\tthrow new Error('Unexpected effects version');\n\t}\n\n\tconst gasObjectChange = effects.V2.changedObjects[effects.V2.gasObjectIndex!];\n\n\tif (!gasObjectChange) {\n\t\tthrow new Error('Gas object not found in effects');\n\t}\n\n\tconst [objectId, { outputState }] = gasObjectChange;\n\n\tif (!outputState.ObjectWrite) {\n\t\tthrow new Error('Unexpected gas object state');\n\t}\n\n\tconst [digest, owner] = outputState.ObjectWrite;\n\n\treturn {\n\t\tref: {\n\t\t\tobjectId,\n\t\t\tdigest,\n\t\t\tversion: effects.V2.lamportVersion,\n\t\t},\n\t\towner: owner.AddressOwner || owner.ObjectOwner!,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}