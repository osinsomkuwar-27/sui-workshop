{"ast":null,"code":"import { toBase64 } from \"@mysten/bcs\";\nimport { normalizeSuiAddress } from \"../utils/sui-types.js\";\nfunction Pure(data) {\n  return {\n    $kind: \"Pure\",\n    Pure: {\n      bytes: data instanceof Uint8Array ? toBase64(data) : data.toBase64()\n    }\n  };\n}\nconst Inputs = {\n  Pure,\n  ObjectRef({\n    objectId,\n    digest,\n    version\n  }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"ImmOrOwnedObject\",\n        ImmOrOwnedObject: {\n          digest,\n          version,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  },\n  SharedObjectRef({\n    objectId,\n    mutable,\n    initialSharedVersion\n  }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"SharedObject\",\n        SharedObject: {\n          mutable,\n          initialSharedVersion,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  },\n  ReceivingRef({\n    objectId,\n    digest,\n    version\n  }) {\n    return {\n      $kind: \"Object\",\n      Object: {\n        $kind: \"Receiving\",\n        Receiving: {\n          digest,\n          version,\n          objectId: normalizeSuiAddress(objectId)\n        }\n      }\n    };\n  }\n};\nexport { Inputs };","map":{"version":3,"names":["toBase64","normalizeSuiAddress","Pure","data","$kind","bytes","Uint8Array","Inputs","ObjectRef","objectId","digest","version","Object","ImmOrOwnedObject","SharedObjectRef","mutable","initialSharedVersion","SharedObject","ReceivingRef","Receiving"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\sui\\src\\transactions\\Inputs.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { toBase64 } from '@mysten/bcs';\nimport type { SerializedBcs } from '@mysten/bcs';\n\nimport { normalizeSuiAddress } from '../utils/sui-types.js';\nimport type { CallArg, ObjectRef } from './data/internal.js';\n\nfunction Pure(data: Uint8Array | SerializedBcs<any>): Extract<CallArg, { Pure: unknown }> {\n\treturn {\n\t\t$kind: 'Pure',\n\t\tPure: {\n\t\t\tbytes: data instanceof Uint8Array ? toBase64(data) : data.toBase64(),\n\t\t},\n\t};\n}\n\nexport const Inputs = {\n\tPure,\n\tObjectRef({ objectId, digest, version }: ObjectRef): Extract<CallArg, { Object: unknown }> {\n\t\treturn {\n\t\t\t$kind: 'Object',\n\t\t\tObject: {\n\t\t\t\t$kind: 'ImmOrOwnedObject',\n\t\t\t\tImmOrOwnedObject: {\n\t\t\t\t\tdigest,\n\t\t\t\t\tversion,\n\t\t\t\t\tobjectId: normalizeSuiAddress(objectId),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n\tSharedObjectRef({\n\t\tobjectId,\n\t\tmutable,\n\t\tinitialSharedVersion,\n\t}: {\n\t\tobjectId: string;\n\t\tmutable: boolean;\n\t\tinitialSharedVersion: number | string;\n\t}): Extract<CallArg, { Object: unknown }> {\n\t\treturn {\n\t\t\t$kind: 'Object',\n\t\t\tObject: {\n\t\t\t\t$kind: 'SharedObject',\n\t\t\t\tSharedObject: {\n\t\t\t\t\tmutable,\n\t\t\t\t\tinitialSharedVersion,\n\t\t\t\t\tobjectId: normalizeSuiAddress(objectId),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n\tReceivingRef({ objectId, digest, version }: ObjectRef): Extract<CallArg, { Object: unknown }> {\n\t\treturn {\n\t\t\t$kind: 'Object',\n\t\t\tObject: {\n\t\t\t\t$kind: 'Receiving',\n\t\t\t\tReceiving: {\n\t\t\t\t\tdigest,\n\t\t\t\t\tversion,\n\t\t\t\t\tobjectId: normalizeSuiAddress(objectId),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t},\n};\n"],"mappings":"AAGA,SAASA,QAAA,QAAgB;AAGzB,SAASC,mBAAA,QAA2B;AAGpC,SAASC,KAAKC,IAAA,EAA4E;EACzF,OAAO;IACNC,KAAA,EAAO;IACPF,IAAA,EAAM;MACLG,KAAA,EAAOF,IAAA,YAAgBG,UAAA,GAAaN,QAAA,CAASG,IAAI,IAAIA,IAAA,CAAKH,QAAA,CAAS;IACpE;EACD;AACD;AAEO,MAAMO,MAAA,GAAS;EACrBL,IAAA;EACAM,UAAU;IAAEC,QAAA;IAAUC,MAAA;IAAQC;EAAQ,GAAqD;IAC1F,OAAO;MACNP,KAAA,EAAO;MACPQ,MAAA,EAAQ;QACPR,KAAA,EAAO;QACPS,gBAAA,EAAkB;UACjBH,MAAA;UACAC,OAAA;UACAF,QAAA,EAAUR,mBAAA,CAAoBQ,QAAQ;QACvC;MACD;IACD;EACD;EACAK,gBAAgB;IACfL,QAAA;IACAM,OAAA;IACAC;EACD,GAI0C;IACzC,OAAO;MACNZ,KAAA,EAAO;MACPQ,MAAA,EAAQ;QACPR,KAAA,EAAO;QACPa,YAAA,EAAc;UACbF,OAAA;UACAC,oBAAA;UACAP,QAAA,EAAUR,mBAAA,CAAoBQ,QAAQ;QACvC;MACD;IACD;EACD;EACAS,aAAa;IAAET,QAAA;IAAUC,MAAA;IAAQC;EAAQ,GAAqD;IAC7F,OAAO;MACNP,KAAA,EAAO;MACPQ,MAAA,EAAQ;QACPR,KAAA,EAAO;QACPe,SAAA,EAAW;UACVT,MAAA;UACAC,OAAA;UACAF,QAAA,EAAUR,mBAAA,CAAoBQ,QAAQ;QACvC;MACD;IACD;EACD;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}