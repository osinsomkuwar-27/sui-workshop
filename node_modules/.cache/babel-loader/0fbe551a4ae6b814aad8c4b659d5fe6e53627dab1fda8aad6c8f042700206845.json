{"ast":null,"code":"function withResolvers() {\n  let resolve;\n  let reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise,\n    reject,\n    resolve\n  };\n}\nexport { withResolvers };","map":{"version":3,"names":["withResolvers","resolve","reject","promise","Promise","res","rej"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\zksend\\src\\utils\\withResolvers.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport interface Resolvers<T = any> {\n\tpromise: Promise<T>;\n\treject: (error: Error) => void;\n\tresolve: (value: T) => void;\n}\n\nexport function withResolvers<T = any>(): Resolvers<T> {\n\tlet resolve: (value: T) => void;\n\tlet reject: (error: Error) => void;\n\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\treturn { promise, reject: reject!, resolve: resolve! };\n}\n"],"mappings":"AASO,SAASA,cAAA,EAAuC;EACtD,IAAIC,OAAA;EACJ,IAAIC,MAAA;EAEJ,MAAMC,OAAA,GAAU,IAAIC,OAAA,CAAW,CAACC,GAAA,EAAKC,GAAA,KAAQ;IAC5CL,OAAA,GAAUI,GAAA;IACVH,MAAA,GAASI,GAAA;EACV,CAAC;EAED,OAAO;IAAEH,OAAA;IAASD,MAAA;IAAiBD;EAAkB;AACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}