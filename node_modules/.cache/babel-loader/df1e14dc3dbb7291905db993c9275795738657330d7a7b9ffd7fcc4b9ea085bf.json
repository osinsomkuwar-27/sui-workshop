{"ast":null,"code":"function ulebEncode(num) {\n  let arr = [];\n  let len = 0;\n  if (num === 0) {\n    return [0];\n  }\n  while (num > 0) {\n    arr[len] = num & 127;\n    if (num >>= 7) {\n      arr[len] |= 128;\n    }\n    len += 1;\n  }\n  return arr;\n}\nfunction ulebDecode(arr) {\n  let total = 0;\n  let shift = 0;\n  let len = 0;\n  while (true) {\n    let byte = arr[len];\n    len += 1;\n    total |= (byte & 127) << shift;\n    if ((byte & 128) === 0) {\n      break;\n    }\n    shift += 7;\n  }\n  return {\n    value: total,\n    length: len\n  };\n}\nexport { ulebDecode, ulebEncode };","map":{"version":3,"names":["ulebEncode","num","arr","len","ulebDecode","total","shift","byte","value","length"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\r\\sui-workshop\\node_modules\\@mysten\\bcs\\src\\uleb.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n// Helper utility: write number as an ULEB array.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nexport function ulebEncode(num: number): number[] {\n\tlet arr = [];\n\tlet len = 0;\n\n\tif (num === 0) {\n\t\treturn [0];\n\t}\n\n\twhile (num > 0) {\n\t\tarr[len] = num & 0x7f;\n\t\tif ((num >>= 7)) {\n\t\t\tarr[len] |= 0x80;\n\t\t}\n\t\tlen += 1;\n\t}\n\n\treturn arr;\n}\n\n// Helper utility: decode ULEB as an array of numbers.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nexport function ulebDecode(arr: number[] | Uint8Array): {\n\tvalue: number;\n\tlength: number;\n} {\n\tlet total = 0;\n\tlet shift = 0;\n\tlet len = 0;\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tlet byte = arr[len];\n\t\tlen += 1;\n\t\ttotal |= (byte & 0x7f) << shift;\n\t\tif ((byte & 0x80) === 0) {\n\t\t\tbreak;\n\t\t}\n\t\tshift += 7;\n\t}\n\n\treturn {\n\t\tvalue: total,\n\t\tlength: len,\n\t};\n}\n"],"mappings":"AAKO,SAASA,WAAWC,GAAA,EAAuB;EACjD,IAAIC,GAAA,GAAM,EAAC;EACX,IAAIC,GAAA,GAAM;EAEV,IAAIF,GAAA,KAAQ,GAAG;IACd,OAAO,CAAC,CAAC;EACV;EAEA,OAAOA,GAAA,GAAM,GAAG;IACfC,GAAA,CAAIC,GAAG,IAAIF,GAAA,GAAM;IACjB,IAAKA,GAAA,KAAQ,GAAI;MAChBC,GAAA,CAAIC,GAAG,KAAK;IACb;IACAA,GAAA,IAAO;EACR;EAEA,OAAOD,GAAA;AACR;AAIO,SAASE,WAAWF,GAAA,EAGzB;EACD,IAAIG,KAAA,GAAQ;EACZ,IAAIC,KAAA,GAAQ;EACZ,IAAIH,GAAA,GAAM;EAGV,OAAO,MAAM;IACZ,IAAII,IAAA,GAAOL,GAAA,CAAIC,GAAG;IAClBA,GAAA,IAAO;IACPE,KAAA,KAAUE,IAAA,GAAO,QAASD,KAAA;IAC1B,KAAKC,IAAA,GAAO,SAAU,GAAG;MACxB;IACD;IACAD,KAAA,IAAS;EACV;EAEA,OAAO;IACNE,KAAA,EAAOH,KAAA;IACPI,MAAA,EAAQN;EACT;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}